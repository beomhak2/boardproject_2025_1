<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="board2">
	<resultMap id="memberVO" type="com.project.page.board2.model.Member"  >
			<result property="userId" column="USER_ID"/>
		    <result property="pwd" column="PWD"/>
		    <result property="name" column="NAME"/>
		    <result property="email" column="EMAIL"/>
		    <result property="phone" column="PHONE"/>
		    <result property="regDt" column="REG_DT"/>
		    <result property="mdfDt" column="MDF_DT"/>
	</resultMap>
	
	<resultMap id="postVO" type="com.project.page.board2.model.Post" >
		<result property="rnum" column="RNUM"/>
		<result property="postId" column="POST_ID"/>
	    <result property="title" column="TITLE"/>
	    <result property="postContent" column="POST_CONTENT"/>
	    <result property="viewCnt" column="VIEW_CNT"/>
	    <result property="delYn" column="DEL_YN"/>
	    <result property="regDt" column="REG_DT"/>
	    <result property="mdfDt" column="MDF_DT"/>
	    <result property="boardId" column="BOARD_ID"/>
	    <result property="userId" column="USER_ID"/>
	    <result property="prevPostId" column="PREV_POST_ID"/>
	    <result property="nextPostId" column="NEXT_POST_ID"/>
	    <collection property="member" resultMap="memberVO"/>
	</resultMap>
	
	<resultMap id="replyVO" type="com.project.page.board2.model.Reply">
		<result property="replyId" column="REPLY_ID"/>
		<result property="replyContent" column="REPLY_CONTENT"/>
		<result property="regDt" column="REG_DT"/>
		<result property="mdfDt" column="MDF_DT"/>
		<result property="replyClass" column="REPLY_CLASS"/>
		<result property="replyGroup" column="REPLY_GROUP"/>
		<result property="replyOrder" column="REPLY_ORDER"/>
		<result property="userId" column="USER_ID"/>
		<result property="postId" column="POST_ID"/>
		<result property="delYn" column="DEL_YN"/>
	</resultMap>
	
	<sql id="search">
		SELECT * FROM post
		<where>
			BOARD_ID = 2
				AND DEL_YN = 'N'
			<if test="search != null and search != ''">
				<choose>
					<when test="condition == 1">
						AND TITLE LIKE CONCAT(CONCAT('%', #{search}), '%')
					</when>
					<when test="condition == 2">
						AND POST_CONTENT LIKE CONCAT(CONCAT('%', #{search}), '%')
					</when>
					<when test="condition == 3">
						AND USER_ID LIKE CONCAT(CONCAT('%', #{search}), '%')
					</when>
				</choose>
			</if>
		</where>
	</sql>
	
	<select id="total" resultType="Integer">
		SELECT COUNT(*)
		FROM (<include refid="search"></include>) P1
	</select>
	
	<select id="replyCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*)
		FROM reply
		WHERE POST_ID = #{postId}
			AND DEL_YN = 'N'
	</select>

	<select id= "list" resultMap="postVO">
		SELECT * FROM (
			SELECT ROWNUM rnum, P.*
			FROM (
				<include refid="search"></include>
				ORDER BY REG_DT
			) P
		)
		WHERE rnum BETWEEN (#{total} - (#{page} * #{perPage})) + 1
						AND (#{total} - ((#{page} - 1) * #{perPage} + 1)) + 1
		ORDER BY rnum DESC
	</select>
	
	<insert id="add" parameterType="com.project.page.board2.model.Post">
		INSERT INTO post (
			POST_ID
			, TITLE
			, POST_CONTENT
			, VIEW_CNT
			, DEL_YN
			, REG_DT
			, MDF_DT
			, BOARD_ID
			, USER_ID
		)
		VALUES (
			BOARD_SEQ.NEXTVAL
			, #{title}
			, #{postContent}
			, 0
			, 'N'
			, SYSDATE
			, SYSDATE
			, 2
			, 'abc123'
		)
	</insert>
	
	<select id="item" resultMap="postVO">
		SELECT *
		FROM (
			SELECT
				P.*,
				M.EMAIL,
				LAG(P.POST_ID, 1, 9999) OVER(ORDER BY POST_ID) AS PREV_POST_ID,
				LEAD(P.POST_ID, 1, 9999) OVER(ORDER BY POST_ID) AS NEXT_POST_ID
			FROM post P
				INNER JOIN member M ON P.USER_ID = M.USER_ID
			WHERE P.BOARD_ID = 2
	               AND P.DEL_YN = 'N'
			ORDER BY P.POST_ID DESC
		)
		WHERE POST_ID = #{postId}
	</select>
	
	<update id="updateViewCnt" parameterType="com.project.page.board2.model.Post">
		UPDATE post SET
			VIEW_CNT = NVL(VIEW_CNT, 0) + 1
		WHERE POST_ID = #{postId}
			AND BOARD_ID = 2 
	</update>
	
	<update id="update" parameterType="com.project.page.board2.model.Post">
		UPDATE post SET
			TITLE = #{title}
			, POST_CONTENT = #{postContent}
			, MDF_DT = SYSDATE
		WHERE POST_ID = #{postId}
			AND BOARD_ID = 2
	</update>
	
	<update id="delete" parameterType="com.project.page.board2.model.Post">
		UPDATE post SET
			DEL_YN = 'Y'
		WHERE POST_ID = #{postId}
			AND BOARD_ID = 2
	</update>
	
	<!-- 댓글 조회 -->
	<select id="selectReplyList" parameterType="int" resultMap="replyVO">
		SELECT  reply_id
				,reply_content
				,reg_dt
				,mdf_dt
				,reply_class
				,reply_group
				,reply_order
				,user_id
				,post_id
				,del_yn
		FROM (
			SELECT * FROM reply
			WHERE post_id = #{postId}
			)
		connect by PRIOR reply_id = reply_group
	   	START WITH reply_group = 0    
	   	ORDER SIBLINGS BY reg_Dt DESC
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="insertReply" parameterType="com.project.page.board2.model.Reply">
		 INSERT INTO reply (
		 	REPLY_ID
		 	, REPLY_CONTENT
		 	, REG_DT
		 	, MDF_DT
		 	, REPLY_CLASS
		 	, REPLY_GROUP
		 	, REPLY_ORDER
		 	, USER_ID
		 	, POST_ID
		 	, DEL_YN
		 )
		 VALUES (
		 	REPLY_SEQ.NEXTVAL
		 	, #{replyContent}
		 	, SYSDATE
		 	, SYSDATE
		 	, 0
		 	, 0
		 	, 0
		 	, 'abc123'
		 	, #{postId}
		 	, 'N'
		 )
	</insert>
	
	<!-- 답글 등록 -->
	<insert id="insertReplyAnswer" parameterType="com.project.page.board2.model.Reply">
	<!-- UPDATE reply
       SET reply_order = reply_order + 1
       WHERE reply_group = #{replyGroup}
         AND reply_order > #{replyOrder}; -->
         
	INSERT INTO reply (
		REPLY_ID
		, REPLY_CONTENT
	 	, REG_DT
	 	, MDF_DT
	 	, REPLY_CLASS
	 	, REPLY_GROUP
	 	, REPLY_ORDER
	 	, USER_ID
	 	, POST_ID
	 	, DEL_YN
	 )
	 VALUES (
	 	REPLY_SEQ.NEXTVAL
	 	, #{replyContent}
	 	, SYSDATE
	 	, SYSDATE
	 	, 1
	 	, #{replyGroup}
	 	, #{replyOrder}
	 	, 'abc123'
	 	, #{postId}
	 	, 'N'
	 )
	</insert>
	
	<!-- 댓글 삭제 -->
	<update id="deleteReply" parameterType="com.project.page.board2.model.Reply">
		UPDATE reply SET
			DEL_YN = 'Y'
		WHERE REPLY_ID = #{replyId}
	</update>

</mapper>